[EXPECTED_RESULTS]

# Please change the expected result values as per the deployment.
fncm_username = <AppLoginPassword>
fncm_password = <AppLoginUsername>
iam_admin_username = <iam_user>
iam_admin_password = <iam_password>
content_app_version = <build>


# Please change the expected result values if required. Provided are default values
secrets = ibm-ban-secret, ibm-icc-secret, ibm-iccsap-secret, ibm-ier-secret, ibm-fncm-secret, ldap-bind-secret, ibm-cp4ba-ldap-ssl-secret, ibm-entitlement-key
fncm_secret_yaml_contents = "kind":"Secret, "db-name":"ibm-fncm-secret", "name":"ibm-fncm-secret", "type":"Opaque"
license_accepted = accept:true
cmis_status = cmisDeployment:Ready,cmisRoute:Ready,cmisService:Ready,cmisStorage:Ready,cmisZenIntegration:Ready
cdra_status = cdraDeployment:NotInstalled,cdraPersistentVolume:NotInstalled,cdraService:NotInstalled,cdraZenIntegration:NotInstalled
cds_status = cdsDeployment:NotInstalled,cdsPersistentVolume:NotInstalled,cdsService:NotInstalled,cdsZenIntegration:NotInstalled
cpds_status = cpdsDeployment:NotInstalled,cpdsPersistentVolume:NotInstalled,cpdsService:NotInstalled,cpdsZenIntegration:NotInstalled
css_status = cssDeployment:Ready,cssService:Ready,cssStorage:Ready
cpe_status = cpeDeployment:Ready,cpeJDBCDriver:Ready,cpeRoute:Ready,cpeService:Ready,cpeStorage:Ready,cpeZenIntegration:Ready
extshare_status = extshareDeployment:NotInstalled,extshareRoute:NotInstalled,extshareService:NotInstalled,extshareStorage:NotInstalled
graphql_status = graphqlDeployment:Ready,graphqlRoute:Ready,graphqlService:Ready,graphqlStorage:Ready
iccsap_status = iccsapDeployment:Ready,iccsapRoute:Ready,iccsapService:Ready,iccsapStorageCheck:Ready
ier_status = ierDeployment:Ready,ierRoute:Ready,ierService:Ready,ierStorageCheck:Ready
navigator_status = navigatorDeployment:Ready,navigatorService:Ready,navigatorStorage:Ready,navigatorZenIntegration:Ready
gitgatewayservice_status = gitsvcDeployment:NotInstalled,gitsvcPersistentVolume:NotInstalled,gitsvcService:NotInstalled
tm_status = tmDeployment:Ready,tmRoute:Ready,tmService:Ready,tmStorage:Ready
viewone_status = viewoneDeployment:NotInstalled,viewoneRRIntegration:NotInstalled,viewoneRoute:NotInstalled,viewoneService:NotInstalled,viewoneStorage:NotInstalled
content_operator_status = message:Running reconciliation,reason:Running,status:True,type:Running, message:,reason:Successful,status:True,type:Ready
all_end_points = name:CSS Health Check URL, uri:https://cpd-{namespace}.apps.{cluster_nam}.cp.fyre.ibm.com/cpe/P8CE/Health/CBRDashboard,name:Task Manager Login URL, uri:https://cpd-{namespace}.apps.{cluster_nam}.cp.fyre.ibm.com/tm/api/v1,name:IER Login URL, uri:https://cpd-{namespace}.apps.{cluster_nam}.cp.fyre.ibm.com/ier/EnterpriseRecordsPlugin/IERApplicationPlugin.jar,name:ICCSAP Login URL, uri:https://cpd-{namespace}.apps.{cluster_nam}.cp.fyre.ibm.com/iccsap,name:ICCSAP Plugin URL, uri:https://cpd-{namespace}.apps.{cluster_nam}.cp.fyre.ibm.com/iccsap/files
events = pod/ibm-cp4a-operator-catalog, pod/ibm-cs-opensearch-catalog, pod/ibm-events-operator-catalog, pod/ibm-fncm-operator-catalog, pod/ibm-zen-operator-catalog
pods = ibm-common-service-operator, ibm-content-operator, ibm-cp4a-operator, ibm-cp4a-operator-catalog, ibm-events-operator-catalog, ibm-events-operator, ibm-fncm-operator-catalog, ibm-iam-operator, ibm-iam-operator-catalog, ibm-insights-engine-operator, ibm-odm-operator, icp4a-foundation-operator
storage_class = managed-nfs-storage
route_cpd = cpd-{namespace}.apps.{cluster_name}.cp.fyre.ibm.com, ibm-nginx-svc, bm-nginx-https-port
adm_top_nodes = NAME, CPU(cores) ,CPU%, MEMORY(bytes), MEMORY%, master0.{cluster_name}.cp.fyre.ibm.com, worker0.{cluster_name}.cp.fyre.ibm.com
pv = NAME, CAPACITY, ACCESS MODES, RECLAIM POLICY, STATUS, CLAIM, STORAGECLASS, REASON, AGE, pvc-, managed-nfs-storage
pvc = NAME, STATUS, VOLUME, CAPACITY, ACCESS MODES, STORAGECLASS, AGE, pvc-, managed-nfs-storage

[INPUT]

# Please change the input values as per the deployment.
namespace = <namespace>
cluster_name = <cluster>
cluster_user_name = kubeadmin
cluster_password = <kubeadmin password>


# OC commands
get_secrets = oc get secret -n {namespace}
get_fncm_username = oc get secret ibm-fncm-secret -o=jsonpath='{@.data.appLoginUsername}'
get_fncm_password = oc get secret ibm-fncm-secret -o=jsonpath='{@.data.appLoginPassword}'
get_fncm_secret_yaml = oc get secret ibm-fncm-secret -o=jsonpath='{@}'
get_iam_admin_username = oc get secret ibm-iam-bindinfo-platform-auth-idp-credentials -o jsonpath='{.data.admin_username}'
get_iam_admin_password = oc get secret ibm-iam-bindinfo-platform-auth-idp-credentials -o jsonpath='{.data.admin_password}'
get_content_app_version = oc get Content -o=jsonpath='{.items[*].spec.appVersion}' -n {namespace}
get_license_accepted = oc get Content -o=jsonpath='{.items[*].spec.license}' -n {namespace}
get_cmis_status = oc get Content -o=jsonpath='{.items[*].status.components.cmis}' -n {namespace}
get_cdra_status = oc get Content -o=jsonpath='{.items[*].status.components.contentDesignerRepoAPI}' -n {namespace}
get_cds_status = oc get Content -o=jsonpath='{.items[*].status.components.contentDesignerService}' -n {namespace}
get_cpds_status = oc get Content -o=jsonpath='{.items[*].status.components.contentProjectDeploymentService}' -n {namespace}
get_css_status = oc get Content -o=jsonpath='{.items[*].status.components.css}' -n {namespace}
get_cpe_status = oc get Content -o=jsonpath='{.items[*].status.components.cpe}' -n {namespace}
get_extshare_status = oc get Content -o=jsonpath='{.items[*].status.components.extshare}' -n {namespace}
get_graphql_status = oc get Content -o=jsonpath='{.items[*].status.components.graphql}' -n {namespace}
get_iccsap_status = oc get Content -o=jsonpath='{.items[*].status.components.iccsap}' -n {namespace}
get_ier_status = oc get Content -o=jsonpath='{.items[*].status.components.ier}' -n {namespace}
get_navigator_status = oc get Content -o=jsonpath='{.items[*].status.components.navigator}' -n {namespace}
get_gitgatewayservice_status = oc get Content -o=jsonpath='{.items[*].status.components.gitgatewayService}' -n {namespace}
get_tm_status = oc get Content -o=jsonpath='{.items[*].status.components.tm}' -n {namespace}
get_viewone_status = oc get Content -o=jsonpath='{.items[*].status.components.viewone}' -n {namespace}
get_content_operator_status = oc get Content -o=jsonpath='{.items[*].status.conditions}' -n {namespace}
get_all_end_points = oc get Content -o=jsonpath='{.items[*].status.endpoints[*]}' -n {namespace}
get_events = oc get events
get_pods = oc get pod -n {namespace}
get_storage_class = oc get storageclass
get_route_cpd = oc get route cpd -n {namespace}
get_adm_top_nodes = oc adm top nodes
get_pv = oc get pv
get_pvc = oc get pvc
